# syntax=docker/dockerfile:1

# This will grab the latest AWS base image for Lambda running Amazon Linux 2
# FROM amazonlinux:2 as builder
FROM public.ecr.aws/lambda/provided:al2 as builder

ENV OTP_VERSION="26.0.2" \
    REBAR3_VERSION="3.22.1" \
    ELIXIR_VERSION="v1.15.4"

LABEL org.opencontainers.image.version=$ELIXIR_VERSION

# Install prerequesites
RUN yum update -y \
    && yum -y groupinstall "Development Tools" \
    && yum -y install tar gzip openssl11 ncurses-devel openssl11-devel

# Install Erlang
RUN set -xe \
    && OTP_DOWNLOAD_URL="https://github.com/erlang/otp/releases/download/OTP-${OTP_VERSION}/otp_src_${OTP_VERSION}.tar.gz" \
    && OTP_DOWNLOAD_SHA256="47853ea9230643a0a31004433f07a71c1b92d6e0094534f629e3b75dbc62f193" \
    && curl -fSL -o otp-src.tar.gz "$OTP_DOWNLOAD_URL" \
    && echo "$OTP_DOWNLOAD_SHA256  otp-src.tar.gz" | sha256sum -c - \
    && export ERL_TOP="/usr/src/otp_src_${OTP_VERSION}" \
    && mkdir -vp $ERL_TOP \
    && tar -xzf otp-src.tar.gz -C $ERL_TOP --strip-components=1 \
    && rm otp-src.tar.gz \    
    && ( cd $ERL_TOP \
    && ./configure \
    && make -j$(nproc) \
    && make -j$(nproc) docs DOC_TARGETS=chunks \
    && make install install-docs DOC_TARGETS=chunks ) \
    && find /usr/local -name examples | xargs rm -rf \	
    && rm -rf $ERL_TOP /var/lib/apt/lists/*

# Install rebar3
RUN set -xe \
    && cd /usr/local/bin \
    && curl -fSL -o rebar3 "https://github.com/erlang/rebar3/releases/download/${REBAR3_VERSION}/rebar3" \
    && chmod +x rebar3

# Install Elixir
ENV LANG=C.UTF-8

RUN set -xe \
    && ELIXIR_DOWNLOAD_URL="https://github.com/elixir-lang/elixir/archive/refs/tags/${ELIXIR_VERSION}.tar.gz" \
    && ELIXIR_DOWNLOAD_SHA256="302bf8065ab792a88f6c3a0c01a6bb58737be3e4fc2564c8afd418bf9792501c" \
    && curl -fSL -o elixir-src.tar.gz "$ELIXIR_DOWNLOAD_URL" \
    && echo "$ELIXIR_DOWNLOAD_SHA256  elixir-src.tar.gz" | sha256sum -c - \
    && mkdir -p /usr/local/src/elixir \
    && tar -xzC /usr/local/src/elixir --strip-components=1 -f elixir-src.tar.gz \
    && rm elixir-src.tar.gz \
    && cd /usr/local/src/elixir \
    && make install clean \
    && find /usr/local/src/elixir/ -type f -not -regex "/usr/local/src/elixir/lib/[^\/]*/lib.*" -exec rm -rf {} + \
    && find /usr/local/src/elixir/ -type d -depth -empty -delete \
    && yum remove -y ncurses-devel libssl-dev \
    && yum groupremove -y "Development Tools" \
    && yum -y clean all \
    && rm -rf /var/cache/yum

# Install the Elixir Lambda Client Interface
RUN mkdir /workspace /workspace/elixir_runtime /workspace/examples
WORKDIR /workspace
COPY ./elixir_runtime ./elixir_runtime/
COPY ./examples ./examples/

ARG MIX_ENV=prod
ENV MIX_ENV=${MIX_ENV}

RUN cd /workspace/examples/hello_world && \ 
    mix do \
    deps.get, \
    compile, \
    release --overwrite, \
    bootstrap, \
    zip

#FROM public.ecr.aws/lambda/provided:al2

# Install prerequesites
#RUN yum update -y \
#    && yum -y install unzip

#COPY --from=builder /workspace/examples/hello_world/_build/prod/rel/hello_world_lambda.zip /var/task/hello_world_lambda.zip
#RUN unzip /var/task/hello_world_lambda.zip

